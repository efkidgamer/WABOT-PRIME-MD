const { Baileys } = require('@adiwajshing/baileys');
const config = require('./config');
const fs = require('fs');

const botName = 'Prime MD';
const bot = Baileys(config.sessionID, config.phoneNumber, config.verificationCode);

const commands = {};
fs.readdirSync('./commands').forEach((file) => {
  const commandName = file.split('.')[0];
  commands[commandName] = require(`./commands/${file}`);
});

bot.on('message', async (message) => {
  const { from, text } = message;
  console.log(`Received message from ${from}: ${text}`);

  if (!text.startsWith(config.prefix)) return;

  const command = text.slice(config.prefix.length).trim().split(' ')[0];
  const args = text.slice(config.prefix.length).trim().split(' ').slice(1);

  const isAdmin = config.admin.numbers.includes(from);
  const isOwner = config.owner === from;

  const commandFile = commands[command.toLowerCase()];

  if (commandFile) {
    if (commandFile.requiresAdmin && !(isAdmin || isOwner)) {
      bot.sendMessage(from, `You don't have permission to use this command. Contact ${botName} admins for assistance.`);
      return;
    }

    await commandFile.execute(bot, from, args);
  } else if (isAdmin || isOwner) {
    switch (command.toLowerCase()) {
      case 'ban':
        bot.sendMessage(from, 'User banned successfully.');
        break;
      case 'unban':
        bot.sendMessage(from, 'User unbanned successfully.');
        break;
      case 'mute':
        bot.sendMessage(from, 'User muted successfully.');
        break;
      case 'unmute':
        bot.sendMessage(from, 'User unmuted successfully.');
        break;
      case 'kick':
        bot.sendMessage(from, 'User kicked successfully.');
        break;
      case 'promote':
        bot.sendMessage(from, 'User promoted successfully.');
        break;
      default:
        bot.sendMessage(from, `Invalid command. Type ${config.prefix}help for ${botName} commands.`);
    }
  } else {
    bot.sendMessage(from, `Unknown command. Type ${config.prefix}help for ${botName} commands.`);
  }
});

bot.on('connect', () => {
  console.log(`${botName} connected!`);
});

bot.on('disconnect', () => {
  console.log(`${botName} disconnected!`);
});

bot.connect();
